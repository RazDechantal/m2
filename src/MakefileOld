#******************************************************************************
# Copyright (C) 2017 by Alex Fosdick - University of Colorado
#
# Redistribution, modification or use of this software in source or binary
# forms is permitted as long as the files maintain this copyright. Users are 
# permitted to modify this and use it to learn about the field of embedded
# software. Alex Fosdick and the University of Colorado are not liable for any
# misuse of this material. 
#
#*****************************************************************************

#------------------------------------------------------------------------------
# <Put a Description Here>
#
# Use: make [TARGET] [PLATFORM-OVERRIDES]
#
# Build Targets:
#      <Put a description of the supported targets here>
#
# Platform Overrides:
#      <Put a description of the supported Overrides here
#
#------------------------------------------------------------------------------
include sources.mk

# Compiler options
CC = gcc
CFLAGS = -Wall -Werror -g -O0 -std=c99
CPPFLAGS =
LDFLAGS =
#LDFLAGS += -T ../msp432p401r.lds
PLATFORM =
SOURCES =
INCLUDES =
LINKER_FILE = msp432p401r.lds

# Architectures Specific Flags
-mcpu = cortex-m4
-mthumb = thumb
-march = armv7e-m
-mfloat-abi = hard
-mfpu = fpv4-sp-d16
--specs = nosys.specs



# Platform Overrides
ifeq ($(PLATFORM),MSP432)
	CC = arm-none-eabi-gcc
	LDFLAGS += -T msp432p401r.lds
	PLATFORM = -DMSP432
	CFLAGS += $(PLATFORM)
	ARCH_FLAGS = -mcpu=cortex-m4 -mthumb -march=armv7e-m -mfloat-abi=hard -mfpu=fpv4-sp-d16 --specs=nosys.specs
#	ARCH_FLAGS = $(-mcpu) $(-mthumb) $(-march) $(-mfloat-abi) $(-mfpu)  $(--specs=nosys.specs)
#	ARCH_FLAGS = $(-mcpu) $(-mthumb) $(-march) $(-mfloat-abi) $(-mfpu)  $(--specs=nosys.specs)
else ifeq ($(PLATFORM),HOST)
	PLATFORM = -DHOST
	CFLAGS += $(PLATFORM)
#	ARCH_FLAGS = $(-mthumb)
endif

# Object files
OBJECTS = $(SOURCES:.c=.o)

# Targets
.PHONY: all clean

all: c1m2.out

%.o: %.c
	$(CC) -c $(CFLAGS) $(ARCH_FLAGS) $(INCLUDES) -o $@ $<

c1m2.out: $(OBJECTS)
	$(CC) $(CFLAGS) $(ARCH_FLAGS) $(LDFLAGS) $(OBJECTS) -o $@ -Wl,-Map=c1m2.map

clean:
	rm -f *.o *.d *.i *.asm c1m2.out c1m2.map

# Individual source file rules
$(SOURCES:.c=.i): %.i: %.c
	$(CC) $(CFLAGS) $(ARCH_FLAGS) $(INCLUDES) -E $< > $@

$(SOURCES:.c=.asm): %.asm: %.c
	$(CC) -S $(CFLAGS) $(ARCH_FLAGS) $(INCLUDES) $< -o $@
	objdump -d $(patsubst %.asm,%.o,$@) > $(patsubst %.asm,%.asm.txt,$@)

# Dependency file rules
%.d: %.c
	$(CC) -M $(CFLAGS) $(ARCH_FLAGS) $(INCLUDES) $< -o $@

-include $(SOURCES:.c=.d)


